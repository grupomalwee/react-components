name: CI & Release

on:
  workflow_dispatch:
    inputs:
      version_type:
        description: 'Tipo de versionamento (patch, minor, major)'
        required: false
        type: choice
        options:
          - patch
          - minor
          - major
      publish:
        description: 'Publicar no npm? (y/N)'
        required: false
        type: choice
        options:
          - y
          - N

jobs:
  validate:
    runs-on: ubuntu-latest
    timeout-minutes: 60
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Setup Node.js 20
        uses: actions/setup-node@v4

      - name: Install dependencies
        run: npm ci

      - name: Run Lint
        run: npm run lint

      - name: Run Tests
        run: npm test

      - name: Build CSS (Tailwind)
        run: npm run build-css

      - name: Build JS (Tsup)
        run: npm run build


  release:
    needs: validate
    runs-on: ubuntu-latest
    if: ${{ github.event.inputs.version_type != '' }}
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: git config
        run: |
          git config user.name "${GITHUB_ACTOR}"
          git config user.email "${GITHUB_ACTOR}@users.noreply.github.com"

      - name: Setup Node.js 20
        uses: actions/setup-node@v4

      - name: Mostrar versão atual da lib
        run: 'echo "Versão atual: $(node -p ''require(''./package.json'').version'')"'

      - name: Versionamento manual
        run: |
          npm version ${{ github.event.inputs.version_type }}
          echo "Nova versão: $(node -p "require('./package.json').version")"
      
      - name: Install dependencies
        run: npm ci
 
      - name: Compile for errors
        run: .husky/pre-commit

      - name: Publicar no npm (condicional)
        if: ${{ github.event.inputs.publish == 'y' }}
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_API_TOKEN }}
        run: npm publish

      - name: Reverter versão se não publicar
        if: ${{ github.event.inputs.publish != 'y' }}
        run: git restore package.json